<!--
 *  Bayrell Time Planner
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class version="1.0"
	name="Bayrell.TimePlanner.AdminLayout" extends="Runtime.Web.Component" 
	module="Bayrell.TimePlanner" model="Runtime.Web.LayoutModel"
>

<use name="Runtime.Core.Message" />
<use name="Runtime.Web.RenderDriver" />
<use name="Runtime.Web.Auth.AuthToken" />
<use name="Runtime.Web.Events.MouseClickEvent" />
<use name="Runtime.Web.Button.Button" component="true" />
<use name="Bayrell.TimePlanner.ModuleDescription" />


<style>
*{box-sizing: border-box;}body{margin:0;padding:0;}
a { text-decoration: inherit; color: #0000d0; cursor: pointer; }
a:hover, a:visited:hover { text-decoration: underline; color: red; }
a:visited { text-decoration: inherit; color: #0000d0; }
a.link { text-decoration: none; color: #0000d0; cursor: pointer; }
a.link:hover, a.link:visited:hover { text-decoration: underline; color: red; }
a.link:visited { text-decoration: none; color: #0000d0; }
body, html{
	font-family: 'Ubuntu', sans-serif;
	font-size: 14px;
	width: 100%;
	padding: 0;
	margin: 0;
}
td, th{
	font-family: 'Ubuntu', sans-serif;
	font-size: 14px;
}
span.lpad5{
	display: inline-block;
	padding-right: 5px;
}
.layout{
	height: 100%;
}
.layout_wrap{
	position: relative;
	display: flex;
	align-items: stretch;
	min-height: calc(100% - 25px);
}
.layout_footer{
	position: relative;
	width: 100%;
	height: 24px;
	border-top: 1px #ccc solid;
	background-color: white;
	font-size: 12px;
}
.layout_footer .b_in{
}
.layout_menu_wrap{
	position: relative;
	width: 200px;
}
.layout_content_wrap{
	position: relative;
	width: calc(100% - 200px);
	padding-bottom: 10px;
}
.layout_site_name, .layout_title_wrap{
	font-size: 16px;
	height: 40px;
}
.layout_site_name, .layout_title_wrap, .layout_page, .layout_content{
	padding: 10px;
}
.layout_site_name{
	border-right: 1px #ccc solid;
}
.layout_title_wrap{
	display: flex;
	align-items: stretch;
}
.layout_title{
	width: 350px;
}
.layout_top_buttons{
	width: calc(100% - 350px);
	padding-left: 10px;
}
.layout_content{
	position: relative;
	height: calc(100% - 45px);
	padding-bottom: 0;
	padding-right: 0;
}
.layout_menu_label{
	font-size: 14px;
	font-weight: bold;
	padding: 10px;
}
.layout_menu{
	position: relative;
	height: calc(100% - 40px);
	overflow-y: auto;
	border-right: 1px #ccc solid;
}
.layout_menu_items{}
.layout_menu_items ul, .layout_menu_items li{
	padding: 0; margin: 0;
	list-style: none;
}
.layout_menu_items ul{}
.layout_menu_items li{
	background-color: white;
}
.layout_menu_items li:hover{
	background-color: ${ vars["colors", "default", "hover-background"] };
}
.layout_menu_items li a{
	display: block;
	padding: 10px 15px;
	border-bottom: 1px solid #e7e7e7;
}
.layout_menu_items li.active > a, %layout_menu_items li.active > a:hover{
	background-color: #337ab7;
	border-color: #337ab7;
	color: white;
}
.layout_menu_logout{
	text-align: center;
	padding-top: 100px;
}
.layout_menu_logout > div{
	padding-top: 5px;
}
</style>


<template name="render">
	%var AuthToken auth_token = layout.keep_data[classof AuthToken] |> default AuthToken null;
	
	%if (auth_token)
	{
		%render static::renderAuth(layout, model, params, content);
	}
	%else
	{
		%render static::renderGuest(layout, model, params, content);
	}
	
</template>


<template name="renderGuest">
	%var string class_name = model.page_class;
	%if (not rtl::isEmpty(class_name))
	{
		<{class_name} @bind="page_model" @key="view"></{class_name}>
	}
</template>


<template name="renderAuth">
	%var string class_name = model.page_class;
	
	<div class='layout'>
		<div class='layout_wrap'>
			<div class='layout_menu_wrap'>
				
				<div class='layout_site_name'>
					<a class='nolink' href='/'>{ _("Bayrell.TimePlanner", "Time planner") }</a>
				</div>
				
				<div class='layout_menu'>
					<div class='layout_menu_label'>
						{ _("Bayrell.TimePlanner", "Dashboard") }
					</div>
					<div class='layout_menu_items'>
						<ul>
							<li class={ rs::start(layout["route", "name"], "app.index") ? "active": "" }>
								<a class='nolink' href={ layout.route_prefix ~ '/' }>
									{ _("Bayrell.TimePlanner", "Dashboard") }
								</a>
							</li>
							<li class={ rs::start(layout["route", "name"], "app.plan") ? "active": "" }>
								<a class='nolink' href={ layout.route_prefix ~ '/plan/' }>
									{ _("Bayrell.TimePlanner", "Plan") }
								</a>
							</li>
							<li class={ rs::start(layout["route", "name"], "app.tasks") ? "active": "" }>
								<a class='nolink' href={ layout.route_prefix ~ '/tasks/' }>
									{ _("Bayrell.TimePlanner", "Find task") }
								</a>
							</li>
						</ul>
					</div>
					
					<div class='layout_menu_label'>
						{ _("Bayrell.TimePlanner", "Admin") }
					</div>
					<div class='layout_menu_items'>
						<ul>
							<li class={ rs::start(layout["route", "name"], "app.admin.projects") ? "active": "" }>
								<a class='nolink' href={ layout.route_prefix ~ '/admin/projects/' }>
									{ _("Bayrell.TimePlanner", "Projects settings") }
								</a>
							</li>
							<li class={ rs::start(layout["route", "name"], "app.admin.info") ? "active": "" }>
								<a class='nolink' href={ layout.route_prefix ~ '/admin/info/' }>
									{ _("Bayrell.TimePlanner", "Admin info") }
								</a>
							</li>
						</ul>
					</div>
					
					<div class='layout_menu_logout'>
						
					</div>
					
				</div>
				
			</div>
			<div class='layout_content_wrap'>
				<div class='layout_title_wrap'>
					<div class='layout_title'>{ model.title }</div>
					<div class='layout_top_buttons'>
						%var Collection<Dict> top_buttons = layout
							|> attr "data", "Bayrell.TimePlanner.Layout.TopButtons"
							|> default Collection []
						;
						%if (rtl::exists(top_buttons))
						{
							%for (int i=0; i<top_buttons.count(); i++)
							{
								%var Dict button = top_buttons[i];
								<Button @event:MouseClickEvent="onTopButtonClick" @tag={ button }>
									{ button["label"] }
								</Button>
							}
						}
					</div>
				</div>
				<div class='layout_content'>
					%if (not rtl::isEmpty(class_name))
					{
						<{class_name} @bind="page_model" @key="view"></{class_name}>
					}
				</div>
			</div>
		</div>
		<div class='layout_footer'>
			<div class='b_out'><div class='b_in'>
				{ "(c) BAYRELL Time Planner 2020 \"Ildar Bikmamatov\" <support@bayrell.org>" }.
				Version: { ModuleDescription::getModuleVersion() }
			</div></div>
		</div>
	</div>
</template>



<script>
/**
 * Top button click
 */
async void onTopButtonClick(Message<MouseClickEvent> msg)
{
	/*
	Dict tag = e["target"]["params"]["@tag"];
	string class_name = tag["component"];
	string method_name = tag["onClick"];
	Component c = this.driver.findComponents(class_name)[0];
	fn f = rtl::method(c, method_name);
	await f(e);
	*/
}



/**
 * Log out click
 */
async void onLogoutClick(Message<MouseClickEvent> msg)
{
	/*
	this.driver.updateModelValue
	(
		["storage", static::getCurrentClassName(), "logout_message"],
		_("Runtime.Web.CRUD", "Please wait ...")
	);
	
	MessageRPC msg = @
		-> method getProvider(RuntimeConstant::BUS_INTERFACE)
		-> await method post
		{
			"url": "/api/logout/",
		}
		-> lib::createStruct(classof MessageRPC)
	;
	
	bool is_success = msg -> method isSuccess;
	this.driver.updateModelValue
	(
		["storage", static::getCurrentClassName(), "logout_message"],
		is_success ? msg -> attr "success_message" : msg -> attr "error"
	);
	
	if (is_success)
	{
		this.driver.reloadPage();
	}
	*/
}
</script>


</class>